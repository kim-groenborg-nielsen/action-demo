name: Release Workflow

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Calculate version
        id: version
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
#          PRERELEASE: true

#      - name: Show new version
#        run: echo "New version is ${{ steps.version.outputs.version-string }}"
      - name: Get tag
        id: tag
        run: echo "tag=$(git describe --tags)" >> "$GITHUB_OUTPUT"

      - name: Set up GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Download release binary
        run: |
          curl -L -o web-app.tar.gz https://github.com/kim-groenborg-nielsen/action-demo/releases/download/${{needs.release.outputs.tag}}/action-demo_${{needs.release.outputs.tag:1}}_linux_amd64.tar.gz
          tar -xzf web-app.tar.gz

      - name: Deploy to production
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        run: |
          touch private_key
          chmod 600 private_key
          echo "${SSH_PRIVATE_KEY}" > private_key
          scp -i private_key -p $SERVER_PORT web-app $SERVER_USER@$SERVER_HOST:/opt/action-demo/
          ssh -i private_key -P $SERVER_PORT $SERVER_USER@$SERVER_HOST 'sudo systemctl restart web-app'
